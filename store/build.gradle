plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
}

def keystoreProperties = new Properties()
if (new File("keystore.properties").exists()) {
    keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))
} else {
    keystoreProperties.load(new FileInputStream(rootProject.file("fakekeystore.properties")))
}

android {
    namespace "net.ivpn.client"
    
    signingConfigs {
        release {
            keyAlias keystoreProperties['release.key.alias']
            keyPassword keystoreProperties['release.key.password']
            storeFile file(keystoreProperties['release.store.file'])
            storePassword keystoreProperties['release.store.password']
            v1SigningEnabled false
            v2SigningEnabled true
        }
    }

    compileSdkVersion 34

    defaultConfig {
        applicationId "net.ivpn.client"
        minSdkVersion 25
        targetSdkVersion 34
        versionCode 135
        versionName "2.10.10"
        ndkVersion "25.1.8937393"

        buildConfigField "String", "BILLING_PUBLIC_KEY", keystoreProperties['billing.public.key']
        multiDexEnabled true
    }

    flavorDimensions "api"
    productFlavors {
        production {
            dimension "api"
            buildConfigField "String", "API_TYPE", "\"production\""
            buildConfigField "String", "BASE_URL", "\"api.ivpn.net\""
        }
        stage {
            dimension "api"
            buildConfigField "String", "API_TYPE", "\"stage\""
            buildConfigField "String", "BASE_URL", keystoreProperties['staging.url']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            matchingFallbacks = ['release']
        }
        debug {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['debug']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    dataBinding {
        enabled = true
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation project(path: ':core')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'

    // Purchases
    implementation 'com.android.billingclient:billing:6.1.0'

    // Dagger
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"

    // Powerful library for logging
    implementation 'org.slf4j:slf4j-api:1.7.24'
    implementation 'org.slf4j:jul-to-slf4j:1.7.0'
    implementation 'com.github.tony19:logback-android:2.0.0'

    // Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Navigation component dynamic feature module support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    implementation "androidx.multidex:multidex:2.0.1"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}